version: '3.5'
services:
  mysql:
    image: mysql:${MYSQL_IMAGE_TAG_NAME:-latest}
    restart: unless-stopped
    ports:
      - 3306
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql/data:/var/lib/mysql
      # - volume_mysql:/var/lib/mysql
    networks:
      - intranet

  mongo:
    image: mongo:${MONGO_IMAGE_TAG_NAME:-latest}
    restart: unless-stopped
    ports:
      - 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongo/data:/data/db
      # - volume_mongo:/data/db
    networks:
      - intranet

  kong:
    image: kong:${KONG_IMAGE_TAG_NAME:-alpine}
    # restart: unless-stopped
    ports:
      - 8000
      - 8001
      - 8443
      - 8444
    environment:
      KONG_ADMIN_LISTEN: 0.0.0.0:8001 reuseport backlog=16384, 0.0.0.0:8444 http2 ssl reuseport backlog=16384
      KONG_DATABASE: "off"
      # KONG_DATABASE: postgres
      KONG_DECLARATIVE_CONFIG: /etc/kong/declarative/kong.yml
      # KONG_LOG_LEVEL: notice
      # KONG_LUA_PACKAGE_PATH: /usr/local/?.lua;;
      # KONG_PG_HOST: postgres
      # KONG_PG_PORT: 5432
      # KONG_PG_USER: kong
      # KONG_PG_PASSWORD:
      # KONG_PG_DATABASE: kong
      # KONG_PG_SCHEMA:
      # KONG_PLUGINS: bundled, plugin1, plugin2
      KONG_TRUSTED_IPS: 0.0.0.0/0,::/0
    volumes:
      - ./kong/declarative:/etc/kong/declarative
      # - ./kong/plugins:/usr/local/kong/plugins
    # command: kong migrations bootstrap
    networks:
      - internet
      - intranet
    depends_on:
      - postgres

  konga:
    image: pantsel/konga:${KONGA_IMAGE_TAG_NAME:-latest}
    restart: unless-stopped
    ports:
      - 1337
    environment:
      DB_ADAPTER: postgres  # 'mongo','postgres','sqlserver' or 'mysql'
      DB_URI: postgres://postgres:postgres@postgres:5432/postgres?current_schema=admin
      NODE_ENV: production
      TOKEN_SECRET: Token secret
    networks:
      - internet
      - intranet
    depends_on:
      - kong
      - postgres

  nginx:
    image: nginx:${NGINX_IMAGE_TAG_NAME:-stable-alpine}
    restart: unless-stopped
    ports:
      - 80
      - 443
    # environment:
    #   NGINX_HOST: foobar.com
    #   NGINX_PORT: 80
    volumes:
      # - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/usr/share/nginx/html:ro
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/pems:/etc/nginx/pems:ro
      - ./nginx/templates:/etc/nginx/templates:ro
    networks:
      - internet

  plantuml-server:
    image: plantuml/plantuml-server:${PLANTUML_SERVER_IMAGE_TAG_NAME:-latest}
    restart: unless-stopped
    ports:
      - 8080
    networks:
      - internet

  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG_NAME:-alpine}
    restart: unless-stopped
    ports:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      # - volume_postgresql:/var/lib/postgresql/data
    networks:
      - intranet

  redis:
    image: redis:${REDIS_IMAGE_TAG_NAME:-alpine}
    restart: unless-stopped
    ports:
      - 6379
    volumes:
      - ./redis/data:/data
      # - volume_redis:/data
    networks:
      - intranet

networks:
  internet:
    name: internet
  intranet:
    name: intranet

# volumes:
#   volume_mysql:
#   volume_mongo:
#   volume_postgresql:
#   volume_redis:
