<match fluent.**>
  @type null
</match>

<source>
  @type forward
  port 24224
</source>

<source>
  @type tail
  path /var/log/containers/*.log
  dpos_file /var/log/fluentd-containers.log.pos
  tag kubernetes.*
  read_from_head true
  <parse>
    @type json
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>

<filter kubernetes.**>
  @type kubernetes_metadata
  # @log_level error
</filter>

<match kubernetes.**>
  @type rewrite_tag_filter
  <rule>
    key       $.kubernetes.pod_name
    pattern   /(.+)/
    tag       $1
  </rule>
</match>

<filter *>
  @type record_transformer
  remove_keys docker, kubernetes
</filter>

<match nginx-*>
  @type relabel
  @label @NGINX_CLASSIFY
</match>

<label @NGINX_CLASSIFY>
  <match *>
    @type rewrite_tag_filter
    <rule>
      key       stream
      pattern   /^std(.+)$/
      tag       ${tag}.$1
    </rule>
  </match>
  <match **>
    @type relabel
    @label @NGINX
  </match>
</label>

<label @NGINX>
  <filter *.err>
    @type parser
    key_name log
    <parse>
      @type regexp
      expression /^(?<time>[^ ]+ [^ ]+) \[(?<level>[^\]]*)\] (?<pid>[^#]*)#(?<tid>[^:]*): (?<message>[^,]*), client: (?<client>[^,]*), server: (?<server>[^,]*), request: "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?", host: "(?<host>[^\"]*)"$/
      # time_key time
      time_format %Y/%m/%d %H:%M:%S
    </parse>
  </filter>
  <filter *.out>
    @type parser
    key_name log
    <parse>
      @type regexp
      expression /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)"(?:\s+(?<http_x_forwarded_for>[^ ]+))?)?$/
      # time_key time
      time_format %d/%b/%Y:%H:%M:%S %z
    </parse>
  </filter>
  <match *.*>
    @type rewrite_tag_filter
    <rule>
      key       path
      pattern   /.+/
      tag       ${tag_parts[0]}
    </rule>
  </match>
  <match **>
    @type relabel
    @label @OUTPUT
  </match>
</label>

<match springboot-*>
  @type relabel
  @label @SPRINGBOOT_CONCAT
</match>

<label @SPRINGBOOT_CONCAT>
  <filter *>
    @type concat
    # @log_level error
    key log
    multiline_start_regexp /^(?<logtime>[^ ]+ [^ ]+)\s* (?<level>[^\s]+) \[(?<service>[^\s]+)?,(?<trace>[^\s]+)?,(?<span>[^\s]+)?,(?<exp>[^\s]+)?\] (?<pid>[^ ]*) --- \[(?<thread>[^\]]*)\] (?<class>[^ ]*)\s*: (?<rest>.*)$/
    flush_interval .001s
    separator ''
    timeout_label @SPRINGBOOT_MATCH
    use_first_timestamp true
  </filter>
  <match **>
    @type relabel
    @label @SPRINGBOOT_MATCH
  </match>
</label>

<label @SPRINGBOOT_MATCH>
  <match *>
    @type rewrite_tag_filter
    <rule>
      key       log
      pattern   /^(?<logtime>[^ ]+ [^ ]+)\s* (?<level>[^\s]+) \[(?<service>[^\s]+)?,(?<trace>[^\s]+)?,(?<span>[^\s]+)?,(?<exp>[^\s]+)?\] (?<pid>[^ ]*) --- \[(?<thread>[^\]]*)\] (?<class>[^ ]*)\s*: (?<rest>.*)$/
      tag       ${tag}.matched
    </rule>
    <rule>
      key       log
      pattern   /.+/
      tag       ${tag}.raw
    </rule>
  </match>
  <match **>
    @type relabel
    @label @SPRINGBOOT
  </match>
</label>

<label @SPRINGBOOT>
  <filter *.matched>
    @type parser
    key_name log
    <parse>
      @type regexp
      expression /^(?<logtime>[^ ]+ [^ ]+)\s* (?<level>[^\s]+) \[(?<service>[^\s]+)?,(?<trace>[^\s]+)?,(?<span>[^\s]+)?,(?<exp>[^\s]+)?\] (?<pid>[^ ]*) --- \[(?<thread>[^\]]*)\] (?<class>[^ ]*)\s*: (?<rest>.*)$/m
      time_key logtime
      time_format %Y-%m-%d %H:%M:%S.%L
      timezone +0800
    </parse>
  </filter>
  <match *.matched>
    @type rewrite_tag_filter
    <rule>
      key       rest
      pattern   /.+/
      tag       ${tag_parts[0]}
    </rule>
  </match>
  <match *.raw>
    @type rewrite_tag_filter
    <rule>
      key       log
      pattern   /.+/
      tag       ${tag_parts[0]}
    </rule>
  </match>
  <match **>
    @type relabel
    @label @OUTPUT
  </match>
</label>

<match **>
  @type relabel
  @label @OUTPUT
</match>

<label @OUTPUT>
  <filter **>
    @type stdout
  </filter>
  <match **>
    @type null
  </match>
</label>
